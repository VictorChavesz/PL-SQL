-- Utilizando SYS_REFCURSOR em PROCEDURES

CREATE OR REPLACE PROCEDURE PRC_CURSOR_EMPLOYEES
  (pemployees_cursor OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN pemployees_cursor 
  FOR
	SELECT 
        FIRST_NAME,
        LAST_NAME
	FROM 
        employees;
	
END PRC_CURSOR_EMPLOYEES;

-- Procedure referenciando o Parametro OUT SYS_REFCURSOR

CREATE OR REPLACE PROCEDURE PRC_DISPLAY_EMPOYEES
IS
  employees_cursor  SYS_REFCURSOR;
  vFIRST_NAME EMPLOYEES.FIRST_NAME%TYPE;
  vLAST_NAME EMPLOYEES.LAST_NAME%TYPE;
BEGIN
  PRC_CURSOR_EMPLOYEES(employees_cursor);
  
  LOOP 
    FETCH 
        employees_cursor 
    INTO 
        vFIRST_NAME,
        vLAST_NAME;
    EXIT WHEN employees_cursor%NOTFOUND;
    
    DBMS_OUTPUT.PUT_LINE(vFIRST_NAME ||' '||vLAST_NAME);
    
  END LOOP;
  
END PRC_DISPLAY_EMPOYEES;

ALTER PROCEDURE PRC_DISPLAY_EMPOYEES COMPILE;

-- Testando

SET SERVEROUTPUT ON
EXEC PRC_DISPLAY_EMPOYEES;

-- Utilizando SYS_REFCURSOR em FUNCTION

CREATE OR REPLACE FUNCTION GET_SYS_REF_CURSOR_EMPLOYEES(pEMPLOYEE_ID NUMBER)
RETURN SYS_REFCURSOR
IS
    EMPLOYEES_CURSOR SYS_REFCURSOR;
BEGIN
    OPEN EMPLOYEES_CURSOR
    FOR
        SELECT 
            FIRST_NAME,
            LAST_NAME
        FROM 
            EMPLOYEES
        WHERE pEMPLOYEE_ID = EMPLOYEE_ID;
    RETURN EMPLOYEES_CURSOR;
END GET_SYS_REF_CURSOR_EMPLOYEES;

--Referenciando a função com a PROCEDURE

CREATE OR REPLACE PROCEDURE PRC_DISPLAY_EMPOYEES2(pEMPLOYEE_ID IN NUMBER)
IS
    EMPLOYEES_CURSOR SYS_REFCURSOR;
    vFIRST_NAME EMPLOYEES.FIRST_NAME%TYPE;
    vLAST_NAME EMPLOYEES.LAST_NAME%TYPE;
BEGIN
    EMPLOYEES_CURSOR := GET_SYS_REF_CURSOR_EMPLOYEES(pEMPLOYEE_ID);
    
    LOOP
        FETCH 
            EMPLOYEES_CURSOR
        INTO 
            vFIRST_NAME,
            vLAST_NAME;
            
        EXIT WHEN EMPLOYEES_CURSOR%NOTFOUND;
        
        DBMS_OUTPUT.PUT_LINE(vFIRST_NAME || ' ' || vLAST_NAME);
    END LOOP;
    
END PRC_DISPLAY_EMPOYEES2;

--Testando

SET SERVEROUTPUT ON
EXEC PRC_DISPLAY_EMPOYEES2(100);
    